{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre',\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre',\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık',\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月',\n    ],\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]],\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n        if(!date){\n            date = new Date();\n        }\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\nimport styleToCss from 'style-object-to-css-string';\n\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n            this.duration *\n            (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function() {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function() {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function() {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function() {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function() {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        if (this.task.visible) {\n            this.draw_bar();\n            this.draw_progress_bar();\n            this.draw_label();\n            if (this.gantt.options.disableDrag) {\n                this.draw_resize_handles();\n            }\n        }\n    }\n\n    draw_bar() {\n        const barOptions = {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group\n        };\n        this.$bar = createSVG(\n            'rect',\n            Object.assign(\n                this.task.bgColor || this.task.barStyle\n                    ? {\n                        style: `${this.task.barStyle};fill:${this.task.bgColor};`\n                    }\n                    : {},\n                barOptions\n            )\n        );\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n\n        const progressOptions = {\n            x: this.x + 1,\n            y: this.y + 1,\n            width: this.progress_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: `bar-progress ${this.task.type || ''}`,\n            append_to: this.bar_group\n        };\n        this.$bar_progress = createSVG(\n            'rect',\n            Object.assign(\n                this.task.color || this.task.progressStyle\n                    ? {\n                          style: `${this.task.progressStyle};fill:${this.task.color};`,\n                    }\n                    : {},\n                progressOptions\n            )\n        );\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n            style: this.task.textStyle\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second')\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n        handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\nimport styleToCss from 'style-object-to-css-string';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year'\n};\n\nconst WEEK_SIMPLE = ['日', '一', '二', '三', '四', '五', '六'];\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        if (tasks.length) {\n            this.setup_tasks(tasks);\n            // initialize with default view mode\n            this.change_view_mode();\n            this.bind_events();\n        }\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                ' HTML DOM element or SVG DOM element for the \\'element\\' parameter'\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt'\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n            disableDrag: true\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n            task.visible = 'visible' in task ? !!task.visible : true;\n            task.barStyle =\n                task.barStyle && typeof task.barStyle === 'object'\n                    ? styleToCss(task.barStyle)\n                    : '';\n            task.progressStyle =\n                task.progressStyle && typeof task.progressStyle === 'object'\n                    ? styleToCss(task.progressStyle)\n                    : '';\n            task.textStyle =\n                task.textStyle && typeof task.textStyle === 'object'\n                    ? styleToCss(task.textStyle)\n                    : '';\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY, VIEW_MODE.DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is([VIEW_MODE.DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -15, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 15, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.options.disableDrag && this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%'\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (\n                this.view_is(VIEW_MODE.MONTH) &&\n                (date.getMonth() + 1) % 3 === 0\n            ) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid\n            });\n        }\n    }\n\n    make_dates() {\n        const isDayMode = this.options.view_mode === 'Day';\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y - (isDayMode ? 10 : 0),\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date\n            });\n\n            if (isDayMode) {\n                const weekStr = WEEK_SIMPLE[new Date(date.date).getDay()];\n                if (weekStr) {\n                    createSVG('text', {\n                        x: date.lower_x,\n                        y: date.lower_y + 6,\n                        innerHTML: weekStr,\n                        class: 'lower-text',\n                        append_to: this.layers.date\n                    });\n                }\n            }\n\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y - (isDayMode ? 2 : 0),\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(\n                        date,\n                        'D MMM',\n                        this.options.language\n                    )\n                    : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : ''\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n            date\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n            this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id)\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","fr","tr","zh","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","visible","draw_bar","draw_progress_bar","draw_label","disableDrag","draw_resize_handles","barOptions","rx","ry","$bar","assign","bgColor","barStyle","style","classList","progressOptions","type","$bar_progress","color","progressStyle","textStyle","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","WEEK_SIMPLE","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","start","end","styleToCss","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","isDayMode","get_dates_to_draw","lower_x","lower_y","lower_text","weekStr","getDay","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}